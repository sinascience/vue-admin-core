import fs from 'fs'
import path from 'path'
import jiti from 'jiti'

const _jiti = jiti(import.meta.url)
const { default: config } = _jiti('../v-pack.vue.config.ts')

const { theme } = config

// --- Add Default Value Logic ---
// If sidebarSectionHeader is not provided, use the primary color as a fallback.
if (theme.colors && !theme.colors.sidebarSectionHeader) {
  theme.colors.sidebarSectionHeader = theme.colors.primary
}
// -----------------------------

let cssContent = `/*
* --------------------------------------------------------------------------
* THIS FILE IS AUTOGENERATED
* --------------------------------------------------------------------------
*/

@theme {
`

if (theme.font) {
  for (const [name, value] of Object.entries(theme.font)) {
    cssContent += `  --font-${name}: ${value};\n`
  }
}

if (theme.radius) {
  for (const [name, value] of Object.entries(theme.radius)) {
    cssContent += `  --radius-${name}: ${value};\n`
  }
}

// The rest of this loop works without changes
if (theme.colors) {
  for (const [name, value] of Object.entries(theme.colors)) {
    const cssVarName = name.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`)
    cssContent += `  --color-${cssVarName}: ${value};\n`
  }
}

cssContent += '}\n'

const outputPath = path.resolve(process.cwd(), 'src/assets/generated-theme.css')
fs.writeFileSync(outputPath, cssContent)

console.log('âœ… Theme generated successfully from v-pack.vue.config.ts')
